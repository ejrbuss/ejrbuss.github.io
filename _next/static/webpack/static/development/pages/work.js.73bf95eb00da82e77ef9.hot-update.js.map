{"version":3,"file":"static/webpack/static/development/pages/work.js.73bf95eb00da82e77ef9.hot-update.js","sources":["webpack:///./layouts/Work.js"],"sourcesContent":["import React from 'react';\nimport Link  from 'next/link';\nimport _     from 'lodash';\n\n// Components\nimport Boot          from '../components/Boot';\nimport Navbar        from '../components/Navbar';\nimport Footer        from '../components/Footer';\nimport SearchResults from '../components/SearchResults';\nimport Tani          from '../components/Tani';\nimport Places        from '../components/Places';\nimport Logos         from '../components/Logos';\n\n// Libraries\nimport Pages from '../lib/Pages';\nimport { useSearch } from '../lib/hooks';\n\nexport default ({ pageName }) => {\n    const page = Pages[pageName];\n    const searchCtx = useSearch();\n    \n    return (\n        <>\n            <div id='page'>\n                <Boot { ...page } />\n                <Navbar \n                    searchCtx={searchCtx}\n                    showScrollMarker\n                    showSearch\n                    leftLinks={<Places work />}\n                    rightLinks={<a target='_blank' href='https://github.com/ejrbuss' className='p-md subtle-accent'>\n                        <i className='fab fa-github fa-lg' />\n                    </a>}\n                />\n                <SearchResults searchCtx={searchCtx} />\n                <div className='content container grid-md work'>\n                    <div className='tani'>\n                        <div className='shadow' />\n                        <svg viewBox='0 0 250 130' version='1.1' xmlns='http://www.w3.org/2000/svg'>\n                            <Tani.HLines n={12} width={250} /> \n                            <Tani.VLines n={24} height={130} delay={0.05} /> \n                            {[  // W\n                                [40, 40],\n                                [40, 50],\n                                [40, 60],\n                                [40, 70],\n                                [40, 80],\n                                [50, 80],\n                                [60, 80],\n                                [60, 70],\n                                [60, 60],\n                                [60, 50],\n                                [60, 40],\n                                [70, 80],\n                                [80, 80],\n                                [80, 70],\n                                [80, 60],\n                                [80, 50],\n                                [80, 40],\n                            ].map(([x, y], key) => <Tani.Tile key={key} x={x} y={y} delayIndex={key} />)}\n                            {[  // O\n                                [100, 40],\n                                [100, 50],\n                                [100, 60],\n                                [100, 70],\n                                [100, 80],\n                                [110, 80],\n                                [120, 80],\n                                [120, 70],\n                                [120, 60],\n                                [120, 50],\n                                [120, 40],\n                                [110, 40],\n                            ].map(([x, y], key) => <Tani.Tile key={key} x={x} y={y} delayIndex={key} />)}\n                            {[  // R\n                                [150, 40],\n                                [160, 40],\n                                [140, 40],\n                                [140, 50],\n                                [140, 60],\n                                [140, 70],\n                                [140, 80],\n                                [150, 60],\n                                [160, 60],\n                                [160, 50],\n                                [160, 70],\n                                [160, 80],\n                            ].map(([x, y], key) => <Tani.Tile key={key} x={x} y={y} delayIndex={key} />)}\n                            {[  // K\n                                [180, 40],\n                                [180, 50],\n                                [180, 60],\n                                [180, 70],\n                                [180, 80],\n                                [190, 60],\n                                [200, 40],\n                                [200, 50],\n                                [200, 60],\n                                [200, 70],\n                                [200, 80],\n                            ].map(([x, y], key) => <Tani.Tile key={key} x={x} y={y} delayIndex={key} />)}\n                        </svg>\n                    </div>\n                    <div className='md'>\n                        <h1>Projects</h1>\n                        <p>Here is a curated list of some of my open source projects. For an exhaustive list, I catalog my github repositories <Link href='/blog/github'><a>here</a></Link>.</p>\n                        {page.projects.map(({ logo, title, href, summary }, key) => {\n                            const Logo = Logos[logo];\n                            return (\n                                <Link key={key} href={href}>\n                                    <a className='example'>    \n                                        <Logo />\n                                        <div className='space-keeper'>\n                                            <h2>{title}</h2>\n                                            <p>{summary}</p>\n                                        </div>\n                                        <div className='summary'>\n                                            <h2>{title}</h2>\n                                            <p>{summary}</p>\n                                        </div>\n                                    </a>\n                                </Link>\n                            );\n                        })}\n                        <h1>Prior Employment</h1>\n                        <p>My prior employers have helped shaped me into the developer I am today. Follow these links to read about my experiences.</p>\n                        {page.work.map(({ logo, title, href, summary }, key) => {\n                            const Logo = Logos[logo];\n                            return (\n                                <Link key={key} href={href}>\n                                    <a className='example'>    \n                                        <Logo />\n                                        <div className='space-keeper'>\n                                            <h2>{title}</h2>\n                                            <p>{summary}</p>\n                                        </div>\n                                        <div className='summary'>\n                                            <h2>{title}</h2>\n                                            <p>{summary}</p>\n                                        </div>\n                                    </a>\n                                </Link>\n                            );\n                        })}\n                    </div>\n                </div>\n            </div>\n            <Footer />\n        </>\n    );\n};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAiBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAYA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAYA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAWA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}