{"version":3,"file":"static/webpack/static/development/pages/about.js.ba89e6dfe405727ef5cd.hot-update.js","sources":["webpack:///./lib/hooks.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport Pages from '../lib/Pages';\n\n\nexport const useScroll = () => {\n\n    const getScrollState = () => ({\n        x: window.pageXOffset,\n        y: window.pageYOffset,\n        xr: window.pageXOffset / (document.body.offsetWidth - screen.width),\n        yr: window.pageYOffset / (document.body.offsetHeight - screen.height),\n    });\n\n    const [scroll, setScroll] = useState({ x: 0, y: 0, xr: 0, xy: 0 });\n    useEffect(() => {\n        const handleScroll = () => {\n            setScroll(getScrollState());\n        };\n        handleScroll();\n        window.addEventListener('scroll', handleScroll);\n        return () => {\n            window.removeEventListener('scroll', handleScroll);\n        };\n    }, []);\n    return scroll;\n};\n\nexport const useSearch = () => {\n    const [open, setOpen] = useState(false);\n    const [search, setSearch] = useState('');\n    const [results, setResults] = useState([]);\n\n    return {\n        open, search, results,\n        change(search) {\n            setSearch(search)\n            if (search.length > 0) {\n                const pages = Pages.$search(search);\n                setResults(pages.map(page => ({\n                    title    : page.title,\n                    href     : page.route,\n                    previews : page.$previews(search), \n                })));\n            } else {\n                setResults([]);\n            }\n        },\n        toggle() {\n            setSearch('');\n            setOpen(!open);\n            setResults([]);\n        },\n    };\n};\n\nconst getYOffset = e => {\n    let y = 0;\n    while (e && !isNaN( e.offsetTop)) {\n        y += e.offsetTop - e.scrollTop;\n        e = e.offsetParent;\n    }\n    return y;\n};\n\nconst ANCHOR_OFFSET = 200;\n\nexport const usePageIndex = () => {\n    const [index, setIndex] = useState([]);\n    \n    const scroll = useScroll();\n\n    const handleUpdate = () => {\n\n        const getBestHeader = (best, h) => {\n            best.active = false;\n            h.active    = false;\n            return (h.yOffset - ANCHOR_OFFSET) < scroll.y ? h : best;\n        };\n\n        if (index.length) {\n            const activeH1 = index.reduce(getBestHeader);\n            activeH1.active = true;\n            if (activeH1.children.length) {\n                const activeH2 = activeH1.children.reduce(getBestHeader);\n                activeH2.active = true;\n            }\n            setIndex(index);\n        }\n    };\n\n    // Create Index\n    useEffect(() => {\n        for (const h1 of document.querySelectorAll('.indexable h1')) {\n            index.push({\n                text     : h1.textContent,\n                href     : h1.parentNode.getAttribute('href'),\n                active   : false,\n                children : [],\n                yOffset  : getYOffset(h1),\n            });\n        }\n        let i = 0;\n        for (const h2 of document.querySelectorAll('.indexable h2')) {\n            const yOffset = getYOffset(h2);\n            while (index[i + 1] && index[i + 1].yOffset < yOffset) {\n                i++;\n            }\n            index[i].children.push({\n                text     : h2.textContent,\n                href     : h2.parentNode.getAttribute('href'),\n                active   : false,\n                yOffset,\n            });\n        }\n        handleUpdate();\n    }, []);\n\n    // Update Index\n    useEffect(handleUpdate, [index, scroll]);\n\n    return index;\n};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAGA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AACA;AAHA;AASA;AAAA;AAAA;AAAA;AAAA;AATA;AAAA;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAqBA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AASA;AAVA;AAAA;AAAA;AACA;AADA;AAWA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAsBA;AACA;AACA;AAEA;AAEA;AACA;;;;A","sourceRoot":""}