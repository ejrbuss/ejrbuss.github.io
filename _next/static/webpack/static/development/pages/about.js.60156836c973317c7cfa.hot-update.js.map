{"version":3,"file":"static/webpack/static/development/pages/about.js.60156836c973317c7cfa.hot-update.js","sources":["webpack:///./lib/Page.js"],"sourcesContent":["import _ from 'lodash';\n\nconst MAX_PREVIEWS = 3;\n\nexport default class Page {\n\n    constructor(data) {\n        Object.assign(this, data);\n        this.date = new Date(this.date);\n    }\n\n    $search(searchText) {\n        const regex = new RegExp(_.escapeRegExp(_.escape(searchText)), 'i');\n        return this.$searchRegex(regex);\n    }\n\n    $searchRegex(regex) {\n        if (this.title && regex.test(this.title)) {\n            return true;\n        }\n        if (this.subtitle && regex.test(this.subtitle)) {\n            return true;\n        }\n        if (this.$formattedDate && regex.test(this.$formattedDate)) {\n            return true;\n        }\n        if (this.plainTxt && regex.test(this.plainTxt)) {\n            return true;\n        }\n        return false;\n    }\n\n    $previews(searchText) {\n        const regex    = new RegExp(`(${_.escapeRegExp(_.escape(searchText))})`, 'gi');\n        const lines    = [this.title || '', this.subtitle || '', this.$formattedDate || '', ...this.plainTxt.split('\\n')];\n        const previews = [];\n\n        for (const line of lines) {\n            if (regex.test(line)) {\n                previews.push(<span dangerouslySetInnerHTML={{\n                    __html: line.replace(regex, `<mark>$1</mark>`) + '...',\n                }} />)\n                if (previews.length === MAX_PREVIEWS) {\n                    previews.push(<span dangerouslySetInnerHTML={{\n                        __html: '<i>Some results have been hidden</i>.',\n                    }} />);\n                    break;\n                }\n            }\n        }\n        return previews;\n    }\n\n    get $day() {\n        return this.date.getUTCDate();\n    }\n\n    get $month() {\n        return this.date.getUTCMonth();\n    }\n\n    get $year() {\n        return this.date.getUTCFullYear();\n    }\n\n    get $formattedDate() {\n        const months = [\n            'January', \n            'February', \n            'March', \n            'April', \n            'May', \n            'June', \n            'July', \n            'August', \n            'September', \n            'October', \n            'November', \n            'December',\n        ];\n        if (isNaN(this.$month) || isNaN(this.$day) || isNaN(this.$year)) {\n            return false;\n        }\n        return `${months[this.$month]} ${this.$day} ${this.$year}`;\n    }\n\n}\n\nPage.compareDates = (page1, page2) => {\n    return page2.date - page1.date;\n};"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;;;AAEA;AACA;AACA;AACA;AAHA;AAAA;AAAA;AACA;AADA;AAKA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAiBA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AAaA;AACA;AACA;AACA;AAAA;AACA;;;;;;AAhFA;AACA;AAmFA;AACA;AACA;;;;A","sourceRoot":""}